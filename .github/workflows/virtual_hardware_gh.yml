# This is a basic workflow to help you get started with Actions on CMSIS projects
# See also https://community.arm.com/developer/tools-software/tools/b/tools-software-ides-blog/posts/infrastructure-for-continuous-integration-tests

name: Arm Virtual Hardware example - github hosted - remote AWS via avhclient 

on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
# To allow you to run this workflow manually 
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
  AWS_IAM_PROFILE: ${{ secrets.AWS_IAM_PROFILE }}
  AWS_SECURITY_GROUP_ID: ${{ secrets.AWS_SECURITY_GROUP_ID }}
  AWS_SUBNET_ID: ${{ secrets.AWS_SUBNET_ID }}


jobs:
  cortex_m_generic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install AVH Client for Python
        run: |
          pip install git+https://github.com/ARM-software/avhclient.git@master
      - name: Execute test suite on Arm Virtual Hardware at AWS
        run: |
          avhclient -b aws execute --specfile ./Platform_FVP_Corstone_SSE-300_Ethos-U55/avh.yml
      - name: Fetch results from Arm Virtual Hardware
        run: |
           cat ./microspeech.log



